{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mapOrder","array","order","key","sort","a","b","A","B","indexOf","App","lgArray","rowsToPin","leagueAverages","require","useState","content","push","className","style","height","width","rowData","filter","league","includes","split","pinnedTopRowData","headerName","valueGetter","splitTitle","cellStyle","field","valueFormatter","oneDecimal","sortable","wrapText","threeDecimals","rateStat","params","data","value","toFixed","replace","number","Math","round","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.822b866c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst App = () => {\n  //display splits in this order\n  var mlb_item_order = ['Overall','AL','NL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n  var aaa_item_order = ['Overall','INT','PCL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n\n  //create a Leagues array to iterate over\n  var lgArray = {'MLB' : mlb_item_order, 'AAA': aaa_item_order}\n\n  //pin the leagues rows to the top of the grid\n  var rowsToPin = ['Overall','AL','NL','INT','PCL']\n  \n  //ingest json\n  let leagueAverages = require('../src/LeagueAvg.json')\n    \n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  let content = [];\n\n  for (var key in lgArray) {\n    content.push(\n      <p><div className=\"ag-theme-alpine\" style={{ height: 625, width: 1600 }}>\n      <AgGridReact\n        rowData = { \n          mapOrder(leagueAverages\n            .filter(leagueAverages => leagueAverages.league == key)\n            .filter(leagueAverages => !rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')} \n        pinnedTopRowData = { \n          mapOrder(leagueAverages\n            .filter(leagueAverages => leagueAverages.league == key)\n            .filter(leagueAverages => rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')}>\n        <AgGridColumn headerName={key}>\n          <AgGridColumn valueGetter={splitTitle} headerName=\"\" cellStyle={{ 'background-color': '#aaa9a9', 'font-weight': 'bold', 'text-align': 'center', 'font-size': 'x-small', 'cell-padding': '0' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"age\" headerName=\"Age\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"prospect_age\" headerName=\"Prospect Age\" valueFormatter={oneDecimal} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"avg\" headerName=\"AVG\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"obp\" headerName=\"OBP\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"slg\" headerName=\"SLG\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ops\" headerName=\"OPS\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"tm_ops\" headerName=\"TM OPS\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"woba\" headerName=\"wOBA\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"babip\" headerName=\"BABIP\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"avg_exit_velo\" headerName=\"Exit Velo\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"exit_velo_90_plus\" headerName=\"% > 90 mph\" valueFormatter={rateStat} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"exit_velo_100_plus\" headerName=\"% > 100 mph\" valueFormatter={rateStat} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"swing_per\" headerName=\"Sw\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"swing_per_kzone\" headerName=\"Sw In Zone\" valueFormatter={rateStat} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"chase_per\" headerName=\"Ch\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"chase_per_2k\" headerName=\"Ch 2K\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"miss_per\" headerName=\"Ms\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"miss_chase_per\" headerName=\"Ms Ch\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"gb_per_fb\" headerName=\"G/F\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ab_per_hr\" headerName=\"AB/HR\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ab_per_ubb\" headerName=\"AB/UBB\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ab_per_so\" headerName=\"AB/SO\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"gb_per\" headerName=\"GB%\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ubb_per\" headerName=\"UBB%\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"so_per\" headerName=\"K%\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n        </AgGridColumn>\n      </AgGridReact>\n      </div></p>\n    );\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  );\n\n  function splitTitle(params) {\n    //edit title for 'Overall' split; show 'MLB Overall' and 'AAA Overall'\n    var split = params.data.split;\n    if (split == 'Overall') {\n      return `${params.data.league} ${split}`;\n    }\n    else {\n      return split;\n    }\n  }\n\n  function oneDecimal(params) {\n    return params.value.toFixed(1);\n  }\n\n  function threeDecimals(params) {\n    return params.value.toFixed(3).replace(/^0+/, '');\n  }\n\n  function rateStat(params) {\n    return toInt(params.value).toString() + '%';\n  }\n\n  function toInt(number) {\n    return Math.round(100 * number);\n  }\n}\n\nfunction mapOrder (array, order, key) {\n  //returns array in sequence specified by 'order' array param\n  array.sort( function (a, b) {\n    var A = a[key], B = b[key];\n    \n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n    \n  });\n  \n  return array;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}