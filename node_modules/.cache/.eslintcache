[{"C:\\Users\\joshk\\Workspace\\React\\my-app\\src\\index.js":"1","C:\\Users\\joshk\\Workspace\\React\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\joshk\\Workspace\\React\\my-app\\src\\App.js":"3"},{"size":500,"mtime":1614011861581,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":8340,"mtime":1614018895696,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"spswn4",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\joshk\\Workspace\\React\\my-app\\src\\index.js",[],"C:\\Users\\joshk\\Workspace\\React\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\joshk\\Workspace\\React\\my-app\\src\\App.js",["15","16","17","18","19","20","21","22","23"],"import React, { useState } from 'react';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst App = () => {\n  //display splits in this order\n  var mlb_item_order = ['Overall','AL','NL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n  var aaa_item_order = ['Overall','INT','PCL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n\n  //create a Leagues array to iterate over\n  var lgArray = {'MLB' : mlb_item_order, 'AAA': aaa_item_order}\n\n  //pin the leagues rows to the top of the grid\n  var rowsToPin = ['Overall','AL','NL','INT','PCL']\n  \n  //ingest json\n  let leagueAverages = require('../src/LeagueAvg.json')\n    \n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  let content = [];\n\n  for (var key in lgArray) {\n    content.push(\n      <p><div className=\"ag-theme-alpine\" style={{ height: 625, width: 1600 }}>\n      <AgGridReact\n        rowData = { \n          mapOrder(leagueAverages\n            .filter(leagueAverages => leagueAverages.league == key)\n            .filter(leagueAverages => !rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')} \n        pinnedTopRowData = { \n          mapOrder(leagueAverages\n            .filter(leagueAverages => leagueAverages.league == key)\n            .filter(leagueAverages => rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')}>\n        <AgGridColumn headerName={key}>\n          <AgGridColumn valueGetter={splitTitle} headerName=\"\" cellStyle={{ 'background-color': '#aaa9a9', 'font-weight': 'bold', 'text-align': 'center', 'font-size': 'x-small', 'cell-padding': '0' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"age\" headerName=\"Age\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"prospect_age\" headerName=\"Prospect Age\" valueFormatter={oneDecimal} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"avg\" headerName=\"AVG\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"obp\" headerName=\"OBP\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"slg\" headerName=\"SLG\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ops\" headerName=\"OPS\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"tm_ops\" headerName=\"TM OPS\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"woba\" headerName=\"wOBA\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"babip\" headerName=\"BABIP\" valueFormatter={threeDecimals} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"avg_exit_velo\" headerName=\"Exit Velo\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"exit_velo_90_plus\" headerName=\"% > 90 mph\" valueFormatter={rateStat} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"exit_velo_100_plus\" headerName=\"% > 100 mph\" valueFormatter={rateStat} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"swing_per\" headerName=\"Sw\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"swing_per_kzone\" headerName=\"Sw In Zone\" valueFormatter={rateStat} sortable='true' wrapText='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"chase_per\" headerName=\"Ch\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"chase_per_2k\" headerName=\"Ch 2K\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"miss_per\" headerName=\"Ms\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"miss_chase_per\" headerName=\"Ms Ch\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"gb_per_fb\" headerName=\"G/F\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ab_per_hr\" headerName=\"AB/HR\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ab_per_ubb\" headerName=\"AB/UBB\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ab_per_so\" headerName=\"AB/SO\" valueFormatter={oneDecimal} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"gb_per\" headerName=\"GB%\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"ubb_per\" headerName=\"UBB%\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n          <AgGridColumn field=\"so_per\" headerName=\"K%\" valueFormatter={rateStat} sortable='true' cellStyle={{ 'text-align': 'center', 'font-size': 'x-small', 'font-weight': 'bold' }} width=\"100\"></AgGridColumn>\n        </AgGridColumn>\n      </AgGridReact>\n      </div></p>\n    );\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  );\n\n  function splitTitle(params) {\n    //edit title for 'Overall' split; show 'MLB Overall' and 'AAA Overall'\n    var split = params.data.split;\n    if (split == 'Overall') {\n      return `${params.data.league} ${split}`;\n    }\n    else {\n      return split;\n    }\n  }\n\n  function oneDecimal(params) {\n    return params.value.toFixed(1);\n  }\n\n  function threeDecimals(params) {\n    return params.value.toFixed(3).replace(/^0+/, '');\n  }\n\n  function rateStat(params) {\n    return toInt(params.value).toString() + '%';\n  }\n\n  function toInt(number) {\n    return Math.round(100 * number);\n  }\n}\n\nfunction mapOrder (array, order, key) {\n  //returns array in sequence specified by 'order' array param\n  array.sort( function (a, b) {\n    var A = a[key], B = b[key];\n    \n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n    \n  });\n  \n  return array;\n};\n\nexport default App;\n",{"ruleId":"24","severity":1,"message":"25","line":21,"column":10,"nodeType":"26","messageId":"27","endLine":21,"endColumn":17},{"ruleId":"24","severity":1,"message":"28","line":21,"column":19,"nodeType":"26","messageId":"27","endLine":21,"endColumn":29},{"ruleId":"24","severity":1,"message":"29","line":22,"column":10,"nodeType":"26","messageId":"27","endLine":22,"endColumn":23},{"ruleId":"24","severity":1,"message":"30","line":22,"column":25,"nodeType":"26","messageId":"27","endLine":22,"endColumn":41},{"ruleId":"31","severity":1,"message":"32","line":32,"column":21,"nodeType":"33","messageId":"34","endLine":32,"endColumn":67},{"ruleId":"35","severity":1,"message":"36","line":32,"column":61,"nodeType":"37","messageId":"38","endLine":32,"endColumn":63},{"ruleId":"31","severity":1,"message":"32","line":36,"column":21,"nodeType":"33","messageId":"34","endLine":36,"endColumn":67},{"ruleId":"35","severity":1,"message":"36","line":36,"column":61,"nodeType":"37","messageId":"38","endLine":36,"endColumn":63},{"ruleId":"35","severity":1,"message":"36","line":80,"column":15,"nodeType":"37","messageId":"38","endLine":80,"endColumn":17},"no-unused-vars","'gridApi' is assigned a value but never used.","Identifier","unusedVar","'setGridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","'setGridColumnApi' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'key'.","ArrowFunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]