{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshk\\\\Workspace\\\\React\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LeagueAveragesGrid extends Component {\n  constructor(props) {\n    super(props);\n    var mlb_item_order = ['Overall', 'AL', 'NL', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF', 'DH'];\n    var aaa_item_order = ['Overall', 'INT', 'PCL', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF', 'DH'];\n    var lgArray = {\n      'MLB': mlb_item_order,\n      'AAA': aaa_item_order\n    };\n    var rowsToPin = ['Overall', 'AL', 'NL', 'INT', 'PCL'];\n\n    let leagueAverages = require('../src/LeagueAvg.json');\n\n    let content = [];\n    this.state = {\n      columnDefs: [{\n        headerName: key,\n        children: [{\n          headerName: '',\n          valueGetter: splitTitle\n        }, {\n          headerName: 'Age',\n          field: 'age',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: 'Prospect Age',\n          field: 'prospect_age',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: 'AVG',\n          field: 'avg',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'OBP',\n          field: 'obp',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'SLG',\n          field: 'slg',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'OPS',\n          field: 'ops',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'TM OPS',\n          field: 'tm_ops',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'wOBA',\n          field: 'woba',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'BABIP',\n          field: 'babip',\n          valueFormatter: threeDecimals\n        }, {\n          headerName: 'Exit Velo',\n          field: 'avg_exit_velo',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: '% > 90 mph',\n          field: 'exit_velo_90_plus',\n          valueFormatter: rateStat\n        }, {\n          headerName: '% > 100 mph',\n          field: 'exit_velo_100_plus',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'Sw',\n          field: 'swing_per',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'Sw In Zone',\n          field: 'swing_per_kzone',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'Ch',\n          field: 'chase_per',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'Ch 2K',\n          field: 'chase_per_2k',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'Ms',\n          field: 'miss_per',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'Ms Ch',\n          field: 'miss_chase_per',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'G/F',\n          field: 'gb_per_fb',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: 'AB/HR',\n          field: 'ab_per_hr',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: 'AB/UBB',\n          field: 'ab_per_ubb',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: 'AB/SO',\n          field: 'ab_per_so',\n          valueFormatter: oneDecimal\n        }, {\n          headerName: 'GB%',\n          field: 'gb_per',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'UBB%',\n          field: 'ubb_per',\n          valueFormatter: rateStat\n        }, {\n          headerName: 'K%',\n          field: 'so_per',\n          valueFormatter: rateStat\n        }]\n      }],\n      defaultColDef: {\n        flex: 1,\n        sortable: true,\n        wrapText: true,\n        autoHeight: true\n      },\n      rowData: mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == key).filter(leagueAverages => !rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split'),\n      pinnedTopRowData: mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == key).filter(leagueAverages => rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')\n    };\n  }\n\n  render() {\n    for (var key in lgArray) {\n      content.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ag-theme-alpine\",\n          style: {\n            height: 625,\n            width: 1800\n          },\n          children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n            modules: this.state.modules,\n            columnDefs: this.state.columnDefs,\n            defaultColDef: this.state.defaultColDef,\n            debug: true,\n            rowData: this.state.rowData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this));\n    }\n\n    return content;\n  }\n  /*   return (\n      <div>\n        {content}\n      </div>\n    ); */\n\n\n  splitTitle(params) {\n    var split = params.data.split;\n\n    if (split == 'Overall') {\n      return `${params.data.league} ${split}`;\n    } else {\n      return split;\n    }\n  }\n\n  oneDecimal(params) {\n    return params.value.toFixed(1);\n  }\n\n  threeDecimals(params) {\n    return params.value.toFixed(3).replace(/^0+/, '');\n  }\n\n  rateStat(params) {\n    return toInt(params.value).toString() + '%';\n  }\n\n  toInt(number) {\n    return Math.round(100 * number);\n  }\n\n  mapOrder(array, order, key) {\n    array.sort(function (a, b) {\n      var A = a[key],\n          B = b[key];\n\n      if (order.indexOf(A) > order.indexOf(B)) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    return array;\n  }\n\n} // export default App;\n\n\nrender( /*#__PURE__*/_jsxDEV(LeagueAveragesGrid, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 277,\n  columnNumber: 8\n}, this), document.querySelector('#root'));","map":{"version":3,"sources":["C:/Users/joshk/Workspace/React/my-app/src/App.js"],"names":["React","Component","render","AgGridColumn","AgGridReact","LeagueAveragesGrid","constructor","props","mlb_item_order","aaa_item_order","lgArray","rowsToPin","leagueAverages","require","content","state","columnDefs","headerName","key","children","valueGetter","splitTitle","field","valueFormatter","oneDecimal","threeDecimals","rateStat","defaultColDef","flex","sortable","wrapText","autoHeight","rowData","mapOrder","filter","league","includes","split","pinnedTopRowData","push","height","width","modules","params","data","value","toFixed","replace","toInt","toString","number","Math","round","array","order","sort","a","b","A","B","indexOf","document","querySelector"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nclass LeagueAveragesGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    var mlb_item_order = ['Overall','AL','NL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n    var aaa_item_order = ['Overall','INT','PCL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n    var lgArray = {'MLB' : mlb_item_order, 'AAA': aaa_item_order}\n    var rowsToPin = ['Overall','AL','NL','INT','PCL']\n\n    let leagueAverages = require('../src/LeagueAvg.json')\n    let content = [];\n\n    this.state = {\n      columnDefs: [\n        {\n          headerName: key,\n          children: [\n            {\n              headerName: '',\n              valueGetter: splitTitle\n            },\n            {\n              headerName: 'Age',\n              field: 'age',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: 'Prospect Age',\n              field: 'prospect_age',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: 'AVG',\n              field: 'avg',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'OBP',\n              field: 'obp',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'SLG',\n              field: 'slg',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'OPS',\n              field: 'ops',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'TM OPS',\n              field: 'tm_ops',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'wOBA',\n              field: 'woba',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'BABIP',\n              field: 'babip',\n              valueFormatter: threeDecimals\n            },\n            {\n              headerName: 'Exit Velo',\n              field: 'avg_exit_velo',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: '% > 90 mph',\n              field: 'exit_velo_90_plus',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: '% > 100 mph',\n              field: 'exit_velo_100_plus',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'Sw',\n              field: 'swing_per',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'Sw In Zone',\n              field: 'swing_per_kzone',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'Ch',\n              field: 'chase_per',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'Ch 2K',\n              field: 'chase_per_2k',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'Ms',\n              field: 'miss_per',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'Ms Ch',\n              field: 'miss_chase_per',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'G/F',\n              field: 'gb_per_fb',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: 'AB/HR',\n              field: 'ab_per_hr',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: 'AB/UBB',\n              field: 'ab_per_ubb',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: 'AB/SO',\n              field: 'ab_per_so',\n              valueFormatter: oneDecimal\n            },\n            {\n              headerName: 'GB%',\n              field: 'gb_per',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'UBB%',\n              field: 'ubb_per',\n              valueFormatter: rateStat\n            },\n            {\n              headerName: 'K%',\n              field: 'so_per',\n              valueFormatter: rateStat\n            },\n          ]\n        }\n      ],\n      defaultColDef: {\n        flex: 1,\n        sortable: true,\n        wrapText: true,\n        autoHeight: true,\n      },\n      rowData: mapOrder(leagueAverages\n        .filter(leagueAverages => leagueAverages.league == key)\n        .filter(leagueAverages => !rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split'),\n      pinnedTopRowData: mapOrder(leagueAverages\n        .filter(leagueAverages => leagueAverages.league == key)\n        .filter(leagueAverages => rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')\n    };\n  }\n\n  render() {\n    for (var key in lgArray) {\n      content.push(\n        <p><div className=\"ag-theme-alpine\" style={{ height: 625, width: 1800 }}>\n          <AgGridReact\n            modules={this.state.modules}\n            columnDefs={this.state.columnDefs}\n            defaultColDef={this.state.defaultColDef}\n            debug={true}\n            rowData={this.state.rowData}\n          />\n  {/*       <AgGridReact \n          rowData = { \n            mapOrder(leagueAverages\n              .filter(leagueAverages => leagueAverages.league == key)\n              .filter(leagueAverages => !rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')} \n          pinnedTopRowData = { \n            mapOrder(leagueAverages\n              .filter(leagueAverages => leagueAverages.league == key)\n              .filter(leagueAverages => rowsToPin.includes(leagueAverages.split)), lgArray[key], 'split')}\n        >\n          <AgGridColumn headerName={key}>\n            <AgGridColumn valueGetter={splitTitle} headerName=\"\"></AgGridColumn>\n            <AgGridColumn field=\"age\" headerName=\"Age\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"prospect_age\" headerName=\"Prospect Age\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"avg\" headerName=\"AVG\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"obp\" headerName=\"OBP\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"slg\" headerName=\"SLG\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"ops\" headerName=\"OPS\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"tm_ops\" headerName=\"TM OPS\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"woba\" headerName=\"wOBA\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"babip\" headerName=\"BABIP\" valueFormatter={threeDecimals} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"avg_exit_velo\" headerName=\"Exit Velo\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"exit_velo_90_plus\" headerName=\"% > 90 mph\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"exit_velo_100_plus\" headerName=\"% > 100 mph\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"swing_per\" headerName=\"Sw\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"swing_per_kzone\" headerName=\"Sw In Zone\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"chase_per\" headerName=\"Ch\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"chase_per_2k\" headerName=\"Ch 2K\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"miss_per\" headerName=\"Ms\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"miss_chase_per\" headerName=\"Ms Ch\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"gb_per_fb\" headerName=\"G/F\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"ab_per_hr\" headerName=\"AB/HR\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"ab_per_ubb\" headerName=\"AB/UBB\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"ab_per_so\" headerName=\"AB/SO\" valueFormatter={oneDecimal} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"gb_per\" headerName=\"GB%\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"ubb_per\" headerName=\"UBB%\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n            <AgGridColumn field=\"so_per\" headerName=\"K%\" valueFormatter={rateStat} sortable='true'></AgGridColumn>\n          </AgGridColumn>\n        </AgGridReact> */}\n        </div></p>\n      );\n    }\n    return(content);\n  }\n\n/*   return (\n    <div>\n      {content}\n    </div>\n  ); */\n\n  splitTitle(params) {\n    var split = params.data.split;\n    if (split == 'Overall') {\n      return `${params.data.league} ${split}`;\n    }\n    else {\n      return split;\n    }\n  }\n\n  oneDecimal(params) {\n    return params.value.toFixed(1);\n  }\n\n  threeDecimals(params) {\n    return params.value.toFixed(3).replace(/^0+/, '');\n  }\n\n  rateStat(params) {\n    return toInt(params.value).toString() + '%';\n  }\n\n  toInt(number) {\n    return Math.round(100 * number);\n  }\n\nmapOrder (array, order, key) {\n  array.sort( function (a, b) {\n    var A = a[key], B = b[key];\n    \n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n    \n  });\n  \n  return array;\n};\n\n}\n// export default App;\nrender(<LeagueAveragesGrid></LeagueAveragesGrid>, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}