{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshk\\\\Workspace\\\\React\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var mlb_item_order = ['Overall', 'AL', 'NL', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF', 'DH'];\n  var aaa_item_order = ['Overall', 'INT', 'PCL', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF', 'DH'];\n  var lgArray = {\n    'MLB': mlb_item_order,\n    'AAA': aaa_item_order\n  };\n\n  let leagueAverages = require('../src/LeagueAvg.json');\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  let content = [];\n\n  for (var key in lgArray) {\n    content.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-alpine\",\n        style: {\n          height: 600,\n          width: 2000\n        },\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          rowData: mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == key), lgArray[key], 'split'),\n          children: /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            headerName: key,\n            headerClass: \"css-header\",\n            children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"split\",\n              headerName: \"\",\n              valueFormatter: splitTitle(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"age\",\n              headerName: \"Age\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"prospect_age\",\n              headerName: \"Prospect Age\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"avg\",\n              headerName: \"AVG\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"obp\",\n              headerName: \"OBP\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"slg\",\n              headerName: \"SLG\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"ops\",\n              headerName: \"OPS\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"tm_ops\",\n              headerName: \"TM OPS\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"woba\",\n              headerName: \"wOBA\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"babip\",\n              headerName: \"BABIP\",\n              valueFormatter: threeDecimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"avg_exit_velo\",\n              headerName: \"Exit Velo\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"exit_velo_90_plus\",\n              headerName: \"% > 90 mph\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"exit_velo_100_plus\",\n              headerName: \"% > 100 mph\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"swing_per\",\n              headerName: \"Sw\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"swing_per_kzone\",\n              headerName: \"Sw In Zone\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"chase_per\",\n              headerName: \"Ch\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"chase_per_2k\",\n              headerName: \"Ch 2K\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"miss_per\",\n              headerName: \"Ms\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"miss_chase_per\",\n              headerName: \"Ms Ch\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"gb_per_fb\",\n              headerName: \"G/F\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"ab_per_hr\",\n              headerName: \"AB/HR\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"ab_per_ubb\",\n              headerName: \"AB/UBB\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"ab_per_so\",\n              headerName: \"AB/SO\",\n              valueFormatter: oneDecimal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"gb_per\",\n              headerName: \"GB%\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"ubb_per\",\n              headerName: \"UBB%\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n              field: \"so_per\",\n              headerName: \"K%\",\n              valueFormatter: rateStat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  function splitTitle(params) {\n    if (params.value == 'Overall') {\n      return `${arguments[0]} ${params.value}`;\n    } else {\n      return params.value;\n    }\n  }\n\n  function oneDecimal(params) {\n    return params.value.toFixed(1);\n  }\n\n  function threeDecimals(params) {\n    return params.value.toFixed(3).replace(/^0+/, '');\n  }\n\n  function rateStat(params) {\n    return toInt(params.value).toString() + '%';\n  }\n\n  function toInt(number) {\n    return Math.round(100 * number);\n  }\n  /*\n      return (\n        <div>\n          <p>\n          {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'MLB'), mlb_item_order, 'split')\n            .map((leagueAverages) => (\n              <p>{leagueAverages.league} / {leagueAverages.split}</p>\n          ))}\n          </p>\n          <p>\n          {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'AAA'), aaa_item_order, 'split')\n            .map((leagueAverages) => (\n              <p>{leagueAverages.league} / {leagueAverages.split}</p>\n          ))}\n          </p>        \n        </div>\n      ) */\n\n};\n\n_s(App, \"m7jW4tvR+j2TZAbZBOJL+Tq0WBw=\");\n\n_c = App;\n\nfunction mapOrder(array, order, key) {\n  array.sort(function (a, b) {\n    var A = a[key],\n        B = b[key];\n\n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n  return array;\n}\n\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joshk/Workspace/React/my-app/src/App.js"],"names":["React","useState","AgGridColumn","AgGridReact","App","mlb_item_order","aaa_item_order","lgArray","leagueAverages","require","gridApi","setGridApi","gridColumnApi","setGridColumnApi","content","key","push","height","width","mapOrder","filter","league","splitTitle","oneDecimal","threeDecimals","rateStat","params","value","arguments","toFixed","replace","toInt","toString","number","Math","round","array","order","sort","a","b","A","B","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst App = () => {\n  var mlb_item_order = ['Overall','AL','NL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n  var aaa_item_order = ['Overall','INT','PCL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n  var lgArray = {'MLB' : mlb_item_order, 'AAA': aaa_item_order}\n  \n  let leagueAverages = require('../src/LeagueAvg.json')\n    \n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  let content = [];\n\n  for (var key in lgArray) {\n    content.push(\n      <p><div className=\"ag-theme-alpine\" style={{ height: 600, width: 2000 }}>\n      <AgGridReact rowData={mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == key), lgArray[key], 'split')}>\n        <AgGridColumn headerName={key} headerClass=\"css-header\">\n          <AgGridColumn field=\"split\" headerName=\"\" valueFormatter={splitTitle(key)}></AgGridColumn>\n          <AgGridColumn field=\"age\" headerName=\"Age\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"prospect_age\" headerName=\"Prospect Age\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"avg\" headerName=\"AVG\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"obp\" headerName=\"OBP\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"slg\" headerName=\"SLG\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"ops\" headerName=\"OPS\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"tm_ops\" headerName=\"TM OPS\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"woba\" headerName=\"wOBA\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"babip\" headerName=\"BABIP\" valueFormatter={threeDecimals}></AgGridColumn>\n          <AgGridColumn field=\"avg_exit_velo\" headerName=\"Exit Velo\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"exit_velo_90_plus\" headerName=\"% > 90 mph\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"exit_velo_100_plus\" headerName=\"% > 100 mph\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"swing_per\" headerName=\"Sw\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"swing_per_kzone\" headerName=\"Sw In Zone\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"chase_per\" headerName=\"Ch\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"chase_per_2k\" headerName=\"Ch 2K\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"miss_per\" headerName=\"Ms\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"miss_chase_per\" headerName=\"Ms Ch\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"gb_per_fb\" headerName=\"G/F\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"ab_per_hr\" headerName=\"AB/HR\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"ab_per_ubb\" headerName=\"AB/UBB\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"ab_per_so\" headerName=\"AB/SO\" valueFormatter={oneDecimal}></AgGridColumn>\n          <AgGridColumn field=\"gb_per\" headerName=\"GB%\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"ubb_per\" headerName=\"UBB%\" valueFormatter={rateStat}></AgGridColumn>\n          <AgGridColumn field=\"so_per\" headerName=\"K%\" valueFormatter={rateStat}></AgGridColumn>\n        </AgGridColumn>\n      </AgGridReact>\n      </div></p>\n    );\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  );\n\n  function splitTitle(params) {\n    if (params.value == 'Overall') {\n      return `${arguments[0]} ${params.value}`;\n    }\n    else {\n      return params.value;\n    }\n  }\n\n  function oneDecimal(params) {\n    return params.value.toFixed(1);\n  }\n\n  function threeDecimals(params) {\n    return params.value.toFixed(3).replace(/^0+/, '');\n  }\n\n  function rateStat(params) {\n    return toInt(params.value).toString() + '%';\n  }\n\n  function toInt(number) {\n    return Math.round(100 * number);\n  }\n\n/*\n    return (\n      <div>\n        <p>\n        {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'MLB'), mlb_item_order, 'split')\n          .map((leagueAverages) => (\n            <p>{leagueAverages.league} / {leagueAverages.split}</p>\n        ))}\n        </p>\n        <p>\n        {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'AAA'), aaa_item_order, 'split')\n          .map((leagueAverages) => (\n            <p>{leagueAverages.league} / {leagueAverages.split}</p>\n        ))}\n        </p>        \n      </div>\n    ) */\n  }\n\n\nfunction mapOrder (array, order, key) {\n  array.sort( function (a, b) {\n    var A = a[key], B = b[key];\n    \n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n    \n  });\n  \n  return array;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}