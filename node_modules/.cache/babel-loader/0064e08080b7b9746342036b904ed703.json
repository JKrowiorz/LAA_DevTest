{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshk\\\\Workspace\\\\React\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var mlb_item_order = ['Overall', 'AL', 'NL', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF', 'DH'];\n  var aaa_item_order = ['Overall', 'INT', 'PCL', 'C', '1B', '2B', '3B', 'SS', 'LF', 'CF', 'RF', 'DH'];\n\n  let leagueAverages = require('../src/LeagueAvg.json');\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 600,\n      width: 2000\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'MLB'), mlb_item_order, 'split'),\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"split\",\n        headerName: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"age\",\n        headerName: \"Age\",\n        valueFormatter: \"ageFormatter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"prospect_age\",\n        headerName: \"Prospect Age\",\n        valueFormatter: \"ageFormatter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"avg\",\n        headerName: \"AVG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"obp\",\n        headerName: \"OBP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"slg\",\n        headerName: \"SLG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"ops\",\n        headerName: \"OPS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"tm_ops\",\n        headerName: \"TM OPS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"woba\",\n        headerName: \"wOBA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"babip\",\n        headerName: \"BABIP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"avg_exit_velo\",\n        headerName: \"Exit Velo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"exit_velo_90_plus\",\n        headerName: \"% > 90 mph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"exit_velo_100_plus\",\n        headerName: \"% > 100 mph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"swing_per\",\n        headerName: \"Sw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"swing_per_kzone\",\n        headerName: \"Sw In Zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"chase_per\",\n        headerName: \"Ch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"chase_per_2k\",\n        headerName: \"Ch 2K\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"miss_per\",\n        headerName: \"Ms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"miss_chase_per\",\n        headerName: \"Ms Ch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"gb_per_fb\",\n        headerName: \"G/F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"ab_per_hr\",\n        headerName: \"AB/HR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"ab_per_ubb\",\n        headerName: \"AB/UBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"ab_per_so\",\n        headerName: \"AB/SO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"gb_per\",\n        headerName: \"GB%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"ubb_per\",\n        headerName: \"UBB%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"so_per\",\n        headerName: \"K%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n\n  function ageFormatter(params) {\n    return params.value.toFixed(1);\n  }\n  /*\n      return (\n        <div>\n          <p>\n          {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'MLB'), mlb_item_order, 'split')\n            .map((leagueAverages) => (\n              <p>{leagueAverages.league} / {leagueAverages.split}</p>\n          ))}\n          </p>\n          <p>\n          {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'AAA'), aaa_item_order, 'split')\n            .map((leagueAverages) => (\n              <p>{leagueAverages.league} / {leagueAverages.split}</p>\n          ))}\n          </p>        \n        </div>\n      ) */\n\n};\n\n_s(App, \"m7jW4tvR+j2TZAbZBOJL+Tq0WBw=\");\n\n_c = App;\n\nfunction mapOrder(array, order, key) {\n  array.sort(function (a, b) {\n    var A = a[key],\n        B = b[key];\n\n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n  return array;\n}\n\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joshk/Workspace/React/my-app/src/App.js"],"names":["React","useState","AgGridColumn","AgGridReact","App","mlb_item_order","aaa_item_order","leagueAverages","require","gridApi","setGridApi","gridColumnApi","setGridColumnApi","height","width","mapOrder","filter","league","ageFormatter","params","value","toFixed","array","order","key","sort","a","b","A","B","indexOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst App = () => {\n  var mlb_item_order = ['Overall','AL','NL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n  var aaa_item_order = ['Overall','INT','PCL','C','1B','2B','3B','SS','LF','CF','RF','DH'];\n  \n  let leagueAverages = require('../src/LeagueAvg.json')\n    \n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  return (\n      <div className=\"ag-theme-alpine\" style={{ height: 600, width: 2000 }}>\n          <AgGridReact\n              rowData={mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'MLB'), mlb_item_order, 'split')}>\n              <AgGridColumn field=\"split\" headerName=\"\"></AgGridColumn>\n              <AgGridColumn field=\"age\" headerName=\"Age\" valueFormatter=\"ageFormatter\"></AgGridColumn>\n              <AgGridColumn field=\"prospect_age\" headerName=\"Prospect Age\" valueFormatter=\"ageFormatter\"></AgGridColumn>\n              <AgGridColumn field=\"avg\" headerName=\"AVG\"></AgGridColumn>\n              <AgGridColumn field=\"obp\" headerName=\"OBP\"></AgGridColumn>\n              <AgGridColumn field=\"slg\" headerName=\"SLG\"></AgGridColumn>\n              <AgGridColumn field=\"ops\" headerName=\"OPS\"></AgGridColumn>\n              <AgGridColumn field=\"tm_ops\" headerName=\"TM OPS\"></AgGridColumn>\n              <AgGridColumn field=\"woba\" headerName=\"wOBA\"></AgGridColumn>\n              <AgGridColumn field=\"babip\" headerName=\"BABIP\"></AgGridColumn>\n              <AgGridColumn field=\"avg_exit_velo\" headerName=\"Exit Velo\"></AgGridColumn>\n              <AgGridColumn field=\"exit_velo_90_plus\" headerName=\"% > 90 mph\"></AgGridColumn>\n              <AgGridColumn field=\"exit_velo_100_plus\" headerName=\"% > 100 mph\"></AgGridColumn>\n              <AgGridColumn field=\"swing_per\" headerName=\"Sw\"></AgGridColumn>\n              <AgGridColumn field=\"swing_per_kzone\" headerName=\"Sw In Zone\"></AgGridColumn>\n              <AgGridColumn field=\"chase_per\" headerName=\"Ch\"></AgGridColumn>\n              <AgGridColumn field=\"chase_per_2k\" headerName=\"Ch 2K\"></AgGridColumn>\n              <AgGridColumn field=\"miss_per\" headerName=\"Ms\"></AgGridColumn>\n              <AgGridColumn field=\"miss_chase_per\" headerName=\"Ms Ch\"></AgGridColumn>\n              <AgGridColumn field=\"gb_per_fb\" headerName=\"G/F\"></AgGridColumn>\n              <AgGridColumn field=\"ab_per_hr\" headerName=\"AB/HR\"></AgGridColumn>\n              <AgGridColumn field=\"ab_per_ubb\" headerName=\"AB/UBB\"></AgGridColumn>\n              <AgGridColumn field=\"ab_per_so\" headerName=\"AB/SO\"></AgGridColumn>\n              <AgGridColumn field=\"gb_per\" headerName=\"GB%\"></AgGridColumn>\n              <AgGridColumn field=\"ubb_per\" headerName=\"UBB%\"></AgGridColumn>\n              <AgGridColumn field=\"so_per\" headerName=\"K%\"></AgGridColumn>\n          </AgGridReact>\n      </div>\n  );\n\n  function ageFormatter(params) {\n    return params.value.toFixed(1);\n  }\n\n\n/*\n    return (\n      <div>\n        <p>\n        {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'MLB'), mlb_item_order, 'split')\n          .map((leagueAverages) => (\n            <p>{leagueAverages.league} / {leagueAverages.split}</p>\n        ))}\n        </p>\n        <p>\n        {mapOrder(leagueAverages.filter(leagueAverages => leagueAverages.league == 'AAA'), aaa_item_order, 'split')\n          .map((leagueAverages) => (\n            <p>{leagueAverages.league} / {leagueAverages.split}</p>\n        ))}\n        </p>        \n      </div>\n    ) */\n  }\n\n\nfunction mapOrder (array, order, key) {\n  array.sort( function (a, b) {\n    var A = a[key], B = b[key];\n    \n    if (order.indexOf(A) > order.indexOf(B)) {\n      return 1;\n    } else {\n      return -1;\n    }\n    \n  });\n  \n  return array;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}